{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Loader from \"../Loader/Loader\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport useLoadData from \"./useLoadData\";\n\nvar withAPIRequest = function withAPIRequest(WrappedComponent, getApiEndpoint) {\n  return function (_ref) {\n    var props = _extends({}, _ref);\n\n    var _getApiEndpoint = getApiEndpoint(props.id),\n        url = _getApiEndpoint.url;\n\n    var _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        load = _useState2[0],\n        setLoad = _useState2[1];\n\n    var _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n    var _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        data = _useState6[0],\n        setData = _useState6[1];\n\n    var handleEndLoad = function handleEndLoad(newData) {\n      setData(newData);\n      setLoad(false);\n      setError(false);\n    };\n\n    var handleErrorLoad = function handleErrorLoad() {\n      setLoad(false);\n      setError(true);\n    };\n\n    useLoadData(url, handleEndLoad, handleErrorLoad);\n    if (load) return React.createElement(Loader, null);\n    if (error) return React.createElement(ErrorMessage, null);\n    return React.createElement(WrappedComponent, _extends({\n      key: +load,\n      data: data\n    }, props));\n  };\n};\n\nexport default withAPIRequest;","map":null,"metadata":{},"sourceType":"module"}