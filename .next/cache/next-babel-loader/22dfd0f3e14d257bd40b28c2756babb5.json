{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport axios from \"axios\";\nimport { MenuItem } from \"@material-ui/core\";\nimport Loader from \"../Loader/Loader\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport { BASE_URL } from \"../../constants\";\n\nconst withAPIRequest = (WrappedComponent, getApiEndpoint) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n\n      _defineProperty(this, \"state\", {\n        load: true,\n        error: false,\n        data: []\n      });\n\n      _defineProperty(this, \"loadData\", () => {\n        const {\n          url\n        } = getApiEndpoint(this.props);\n        axios.get(BASE_URL + url).then(response => {\n          this.handleEndLoad(response.data);\n        }).catch(() => {\n          this.handleErrorLoad();\n        });\n      });\n\n      _defineProperty(this, \"handleEndLoad\", newData => {\n        this.setState({\n          load: false,\n          error: false,\n          data: newData\n        });\n      });\n\n      _defineProperty(this, \"handleErrorLoad\", () => {\n        this.setState({\n          load: false,\n          error: true\n        });\n      });\n    }\n\n    componentDidMount() {\n      this.loadData();\n    }\n\n    render() {\n      const {\n        load,\n        error,\n        data\n      } = this.state;\n      if (load) return React.createElement(Loader, null);\n      if (error) return React.createElement(ErrorMessage, null);\n      return React.createElement(WrappedComponent, _extends({\n        data: data\n      }, this.props));\n    }\n\n  }, _temp;\n};\n\nexport default withAPIRequest;","map":null,"metadata":{},"sourceType":"module"}