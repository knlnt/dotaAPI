{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Loader from \"../Loader/Loader\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport useLoadData from \"./useLoadData\";\n\nconst withAPIRequest = (WrappedComponent, getApiEndpoint) => {\n  return (_ref) => {\n    let props = _Object$assign({}, _ref);\n\n    const {\n      url\n    } = getApiEndpoint(props.id);\n    const [load, setLoad] = useState(true);\n    const [error, setError] = useState(false);\n    const [data, setData] = useState([]);\n\n    const handleEndLoad = newData => {\n      setData(newData);\n      setLoad(false);\n      setError(false);\n    };\n\n    const handleErrorLoad = () => {\n      setLoad(false);\n      setError(true);\n    };\n\n    useLoadData(url, handleEndLoad, handleErrorLoad);\n    if (load) return React.createElement(Loader, null);\n    if (error) return React.createElement(ErrorMessage, null);\n    return React.createElement(WrappedComponent, _extends({\n      key: +load,\n      data: data\n    }, props));\n  };\n};\n\nexport default withAPIRequest;","map":null,"metadata":{},"sourceType":"module"}