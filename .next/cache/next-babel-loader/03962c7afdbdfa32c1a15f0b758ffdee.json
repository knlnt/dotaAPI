{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport axios from \"axios\";\nimport { Grid, CircularProgress, Typography, Card } from \"@material-ui/core\";\nimport { BASE_URL, NO_AVATAR } from \"../../constants\";\nimport PlayerHeader from \"./Header\";\nimport RecentMatches from \"./RecentMatches/RecentMatches\";\n\nclass PLayerInfo extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      load: true,\n      error: false,\n      players: {\n        profile: {\n          avatarfull: NO_AVATAR,\n          personaname: \"Имя\",\n          profileurl: \"https://steamcommunity.com/\"\n        }\n      },\n      recentMatches: []\n    });\n\n    _defineProperty(this, \"loadPlayers\", () => {\n      const {\n        id\n      } = this.props;\n      axios.get(BASE_URL + \"players/\" + id).then(response => {\n        //console.dir(response.data);\n        this.updateInfoPlayers(response.data);\n        this.handleEndLoad();\n      }).catch(() => {\n        this.handleErrorLoad();\n      });\n    });\n\n    _defineProperty(this, \"loadRecentMatches\", () => {\n      const {\n        id\n      } = this.props;\n      axios.get(BASE_URL + \"players/\" + id + \"/recentMatches\").then(response => {\n        this.updateInfoRecentMatches(response.data);\n        this.handleEndLoad();\n        console.dir(this.state.recentMatches);\n      }).catch(() => {\n        this.handleErrorLoad();\n      });\n    });\n\n    _defineProperty(this, \"updateInfoPlayers\", newInfo => {\n      this.setState({\n        players: newInfo\n      });\n    });\n\n    _defineProperty(this, \"updateInfoRecentMatches\", newInfo => {\n      this.setState({\n        recentMatches: newInfo\n      });\n    });\n\n    _defineProperty(this, \"handleEndLoad\", () => {\n      this.setState({\n        load: false,\n        error: false\n      });\n    });\n\n    _defineProperty(this, \"handleErrorLoad\", () => {\n      this.setState({\n        load: false,\n        error: true\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadPlayers();\n    this.loadRecentMatches();\n  }\n\n  render() {\n    const {\n      load,\n      error,\n      players,\n      recentMatches\n    } = this.state;\n    const {\n      profile\n    } = players;\n    const {\n      avatarfull,\n      personaname,\n      profileurl\n    } = profile;\n\n    const content = (() => {\n      if (load) return React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        alignItems: \"center\"\n      }, React.createElement(CircularProgress, null));\n      if (error) return React.createElement(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        component: \"h5\",\n        gutterBottom: true\n      }, \"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430...\");\n      return React.createElement(Card, null, React.createElement(PlayerHeader, {\n        avatar: avatarfull,\n        name: personaname,\n        url: profileurl\n      }), React.createElement(RecentMatches, {\n        recentMatches: recentMatches\n      }));\n    })();\n\n    return React.createElement(\"div\", null, content);\n  }\n\n}\n\nexport default PLayerInfo;","map":null,"metadata":{},"sourceType":"module"}